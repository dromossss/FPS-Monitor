
// This file is auto generated by Scripts/generate_code.py

#pragma once
#include "../../CommonUtilities/win/WinAPI.h"
#include <dxgi1_6.h>

#include "../Custom/IUnknown_Wrapper.h"

namespace GfxLayer
{
    /* GENRATED FROM THE DXGI HEADER */


    class IDXGIObject_Wrapper: public IUnknown_Wrapper
    {
    public:
    	IDXGIObject_Wrapper(REFIID riid, IUnknown* pObject): IUnknown_Wrapper(riid, pObject)
        {}

        ~IDXGIObject_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE SetPrivateData(REFGUID Name, UINT DataSize, const void* pData);
        virtual HRESULT STDMETHODCALLTYPE SetPrivateDataInterface(REFGUID Name, const IUnknown* pUnknown);
        virtual HRESULT STDMETHODCALLTYPE GetPrivateData(REFGUID Name, UINT* pDataSize, void* pData);
        virtual HRESULT STDMETHODCALLTYPE GetParent(REFIID riid, void** ppParent);
    };

    class IDXGIDeviceSubObject_Wrapper: public IDXGIObject_Wrapper
    {
    public:
    	IDXGIDeviceSubObject_Wrapper(REFIID riid, IUnknown* pObject): IDXGIObject_Wrapper(riid, pObject)
        {}

        ~IDXGIDeviceSubObject_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE GetDevice(REFIID riid, void** ppDevice);
    };

    class IDXGIResource_Wrapper: public IDXGIDeviceSubObject_Wrapper
    {
    public:
    	IDXGIResource_Wrapper(REFIID riid, IUnknown* pObject): IDXGIDeviceSubObject_Wrapper(riid, pObject)
        {}

        ~IDXGIResource_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE GetSharedHandle(HANDLE* pSharedHandle);
        virtual HRESULT STDMETHODCALLTYPE GetUsage(DXGI_USAGE* pUsage);
        virtual HRESULT STDMETHODCALLTYPE SetEvictionPriority(UINT EvictionPriority);
        virtual HRESULT STDMETHODCALLTYPE GetEvictionPriority(UINT* pEvictionPriority);
    };

    class IDXGIKeyedMutex_Wrapper: public IDXGIDeviceSubObject_Wrapper
    {
    public:
    	IDXGIKeyedMutex_Wrapper(REFIID riid, IUnknown* pObject): IDXGIDeviceSubObject_Wrapper(riid, pObject)
        {}

        ~IDXGIKeyedMutex_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE AcquireSync(UINT64 Key, DWORD dwMilliseconds);
        virtual HRESULT STDMETHODCALLTYPE ReleaseSync(UINT64 Key);
    };

    class IDXGISurface_Wrapper: public IDXGIDeviceSubObject_Wrapper
    {
    public:
    	IDXGISurface_Wrapper(REFIID riid, IUnknown* pObject): IDXGIDeviceSubObject_Wrapper(riid, pObject)
        {}

        ~IDXGISurface_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE GetDesc(DXGI_SURFACE_DESC* pDesc);
        virtual HRESULT STDMETHODCALLTYPE Map(DXGI_MAPPED_RECT* pLockedRect, UINT MapFlags);
        virtual HRESULT STDMETHODCALLTYPE Unmap();
    };

    class IDXGISurface1_Wrapper: public IDXGISurface_Wrapper
    {
    public:
    	IDXGISurface1_Wrapper(REFIID riid, IUnknown* pObject): IDXGISurface_Wrapper(riid, pObject)
        {}

        ~IDXGISurface1_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE GetDC(BOOL Discard, HDC* phdc);
        virtual HRESULT STDMETHODCALLTYPE ReleaseDC(RECT* pDirtyRect);
    };

    class IDXGIAdapter_Wrapper: public IDXGIObject_Wrapper
    {
    public:
    	IDXGIAdapter_Wrapper(REFIID riid, IUnknown* pObject): IDXGIObject_Wrapper(riid, pObject)
        {}

        ~IDXGIAdapter_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE EnumOutputs(UINT Output, IDXGIOutput** ppOutput);
        virtual HRESULT STDMETHODCALLTYPE GetDesc(DXGI_ADAPTER_DESC* pDesc);
        virtual HRESULT STDMETHODCALLTYPE CheckInterfaceSupport(REFGUID InterfaceName, LARGE_INTEGER* pUMDVersion);
    };

    class IDXGIOutput_Wrapper: public IDXGIObject_Wrapper
    {
    public:
    	IDXGIOutput_Wrapper(REFIID riid, IUnknown* pObject): IDXGIObject_Wrapper(riid, pObject)
        {}

        ~IDXGIOutput_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE GetDesc(DXGI_OUTPUT_DESC* pDesc);
        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeList(DXGI_FORMAT EnumFormat, UINT Flags, UINT* pNumModes, DXGI_MODE_DESC* pDesc);
        virtual HRESULT STDMETHODCALLTYPE FindClosestMatchingMode(const DXGI_MODE_DESC* pModeToMatch, DXGI_MODE_DESC* pClosestMatch, IUnknown* pConcernedDevice);
        virtual HRESULT STDMETHODCALLTYPE WaitForVBlank();
        virtual HRESULT STDMETHODCALLTYPE TakeOwnership(IUnknown* pDevice, BOOL Exclusive);
        virtual void STDMETHODCALLTYPE ReleaseOwnership();
        virtual HRESULT STDMETHODCALLTYPE GetGammaControlCapabilities(DXGI_GAMMA_CONTROL_CAPABILITIES* pGammaCaps);
        virtual HRESULT STDMETHODCALLTYPE SetGammaControl(const DXGI_GAMMA_CONTROL* pArray);
        virtual HRESULT STDMETHODCALLTYPE GetGammaControl(DXGI_GAMMA_CONTROL* pArray);
        virtual HRESULT STDMETHODCALLTYPE SetDisplaySurface(IDXGISurface* pScanoutSurface);
        virtual HRESULT STDMETHODCALLTYPE GetDisplaySurfaceData(IDXGISurface* pDestination);
        virtual HRESULT STDMETHODCALLTYPE GetFrameStatistics(DXGI_FRAME_STATISTICS* pStats);
    };

    class IDXGISwapChain_Wrapper: public IDXGIDeviceSubObject_Wrapper
    {
    public:
    	IDXGISwapChain_Wrapper(REFIID riid, IUnknown* pObject): IDXGIDeviceSubObject_Wrapper(riid, pObject)
        {}

        ~IDXGISwapChain_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE Present(UINT SyncInterval, UINT Flags);
        virtual HRESULT STDMETHODCALLTYPE GetBuffer(UINT Buffer, REFIID riid, void** ppSurface);
        virtual HRESULT STDMETHODCALLTYPE SetFullscreenState(BOOL Fullscreen, IDXGIOutput* pTarget);
        virtual HRESULT STDMETHODCALLTYPE GetFullscreenState(BOOL* pFullscreen, IDXGIOutput** ppTarget);
        virtual HRESULT STDMETHODCALLTYPE GetDesc(DXGI_SWAP_CHAIN_DESC* pDesc);
        virtual HRESULT STDMETHODCALLTYPE ResizeBuffers(UINT BufferCount, UINT Width, UINT Height, DXGI_FORMAT NewFormat, UINT SwapChainFlags);
        virtual HRESULT STDMETHODCALLTYPE ResizeTarget(const DXGI_MODE_DESC* pNewTargetParameters);
        virtual HRESULT STDMETHODCALLTYPE GetContainingOutput(IDXGIOutput** ppOutput);
        virtual HRESULT STDMETHODCALLTYPE GetFrameStatistics(DXGI_FRAME_STATISTICS* pStats);
        virtual HRESULT STDMETHODCALLTYPE GetLastPresentCount(UINT* pLastPresentCount);
    };

    class IDXGIFactory_Wrapper: public IDXGIObject_Wrapper
    {
    public:
    	IDXGIFactory_Wrapper(REFIID riid, IUnknown* pObject): IDXGIObject_Wrapper(riid, pObject)
        {}

        ~IDXGIFactory_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE EnumAdapters(UINT Adapter, IDXGIAdapter** ppAdapter);
        virtual HRESULT STDMETHODCALLTYPE MakeWindowAssociation(HWND WindowHandle, UINT Flags);
        virtual HRESULT STDMETHODCALLTYPE GetWindowAssociation(HWND* pWindowHandle);
        virtual HRESULT STDMETHODCALLTYPE CreateSwapChain(IUnknown* pDevice, DXGI_SWAP_CHAIN_DESC* pDesc, IDXGISwapChain** ppSwapChain);
        virtual HRESULT STDMETHODCALLTYPE CreateSoftwareAdapter(HMODULE Module, IDXGIAdapter** ppAdapter);
    };

    class IDXGIDevice_Wrapper: public IDXGIObject_Wrapper
    {
    public:
    	IDXGIDevice_Wrapper(REFIID riid, IUnknown* pObject): IDXGIObject_Wrapper(riid, pObject)
        {}

        ~IDXGIDevice_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE GetAdapter(IDXGIAdapter** pAdapter);
        virtual HRESULT STDMETHODCALLTYPE CreateSurface(const DXGI_SURFACE_DESC* pDesc, UINT NumSurfaces, DXGI_USAGE Usage, const DXGI_SHARED_RESOURCE* pSharedResource, IDXGISurface** ppSurface);
        virtual HRESULT STDMETHODCALLTYPE QueryResourceResidency(IUnknown* const* ppResources, DXGI_RESIDENCY* pResidencyStatus, UINT NumResources);
        virtual HRESULT STDMETHODCALLTYPE SetGPUThreadPriority(INT Priority);
        virtual HRESULT STDMETHODCALLTYPE GetGPUThreadPriority(INT* pPriority);
    };

    class IDXGIFactory1_Wrapper: public IDXGIFactory_Wrapper
    {
    public:
    	IDXGIFactory1_Wrapper(REFIID riid, IUnknown* pObject): IDXGIFactory_Wrapper(riid, pObject)
        {}

        ~IDXGIFactory1_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE EnumAdapters1(UINT Adapter, IDXGIAdapter1** ppAdapter);
        virtual BOOL STDMETHODCALLTYPE IsCurrent();
    };

    class IDXGIAdapter1_Wrapper: public IDXGIAdapter_Wrapper
    {
    public:
    	IDXGIAdapter1_Wrapper(REFIID riid, IUnknown* pObject): IDXGIAdapter_Wrapper(riid, pObject)
        {}

        ~IDXGIAdapter1_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE GetDesc1(DXGI_ADAPTER_DESC1* pDesc);
    };

    class IDXGIDevice1_Wrapper: public IDXGIDevice_Wrapper
    {
    public:
    	IDXGIDevice1_Wrapper(REFIID riid, IUnknown* pObject): IDXGIDevice_Wrapper(riid, pObject)
        {}

        ~IDXGIDevice1_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE SetMaximumFrameLatency(UINT MaxLatency);
        virtual HRESULT STDMETHODCALLTYPE GetMaximumFrameLatency(UINT* pMaxLatency);
    };

    class IDXGIDisplayControl_Wrapper: public IUnknown_Wrapper
    {
    public:
    	IDXGIDisplayControl_Wrapper(REFIID riid, IUnknown* pObject): IUnknown_Wrapper(riid, pObject)
        {}

        ~IDXGIDisplayControl_Wrapper()
        {}

        virtual BOOL STDMETHODCALLTYPE IsStereoEnabled();
        virtual void STDMETHODCALLTYPE SetStereoEnabled(BOOL enabled);
    };

    class IDXGIOutputDuplication_Wrapper: public IDXGIObject_Wrapper
    {
    public:
    	IDXGIOutputDuplication_Wrapper(REFIID riid, IUnknown* pObject): IDXGIObject_Wrapper(riid, pObject)
        {}

        ~IDXGIOutputDuplication_Wrapper()
        {}

        virtual void STDMETHODCALLTYPE GetDesc(DXGI_OUTDUPL_DESC* pDesc);
        virtual HRESULT STDMETHODCALLTYPE AcquireNextFrame(UINT TimeoutInMilliseconds, DXGI_OUTDUPL_FRAME_INFO* pFrameInfo, IDXGIResource** ppDesktopResource);
        virtual HRESULT STDMETHODCALLTYPE GetFrameDirtyRects(UINT DirtyRectsBufferSize, RECT* pDirtyRectsBuffer, UINT* pDirtyRectsBufferSizeRequired);
        virtual HRESULT STDMETHODCALLTYPE GetFrameMoveRects(UINT MoveRectsBufferSize, DXGI_OUTDUPL_MOVE_RECT* pMoveRectBuffer, UINT* pMoveRectsBufferSizeRequired);
        virtual HRESULT STDMETHODCALLTYPE GetFramePointerShape(UINT PointerShapeBufferSize, void* pPointerShapeBuffer, UINT* pPointerShapeBufferSizeRequired, DXGI_OUTDUPL_POINTER_SHAPE_INFO* pPointerShapeInfo);
        virtual HRESULT STDMETHODCALLTYPE MapDesktopSurface(DXGI_MAPPED_RECT* pLockedRect);
        virtual HRESULT STDMETHODCALLTYPE UnMapDesktopSurface();
        virtual HRESULT STDMETHODCALLTYPE ReleaseFrame();
    };

    class IDXGISurface2_Wrapper: public IDXGISurface1_Wrapper
    {
    public:
    	IDXGISurface2_Wrapper(REFIID riid, IUnknown* pObject): IDXGISurface1_Wrapper(riid, pObject)
        {}

        ~IDXGISurface2_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE GetResource(REFIID riid, void** ppParentResource, UINT* pSubresourceIndex);
    };

    class IDXGIResource1_Wrapper: public IDXGIResource_Wrapper
    {
    public:
    	IDXGIResource1_Wrapper(REFIID riid, IUnknown* pObject): IDXGIResource_Wrapper(riid, pObject)
        {}

        ~IDXGIResource1_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE CreateSubresourceSurface(UINT index, IDXGISurface2** ppSurface);
        virtual HRESULT STDMETHODCALLTYPE CreateSharedHandle(const SECURITY_ATTRIBUTES* pAttributes, DWORD dwAccess, LPCWSTR lpName, HANDLE* pHandle);
    };

    class IDXGIDevice2_Wrapper: public IDXGIDevice1_Wrapper
    {
    public:
    	IDXGIDevice2_Wrapper(REFIID riid, IUnknown* pObject): IDXGIDevice1_Wrapper(riid, pObject)
        {}

        ~IDXGIDevice2_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE OfferResources(UINT NumResources, IDXGIResource* const* ppResources, DXGI_OFFER_RESOURCE_PRIORITY Priority);
        virtual HRESULT STDMETHODCALLTYPE ReclaimResources(UINT NumResources, IDXGIResource* const* ppResources, BOOL* pDiscarded);
        virtual HRESULT STDMETHODCALLTYPE EnqueueSetEvent(HANDLE hEvent);
    };

    class IDXGISwapChain1_Wrapper: public IDXGISwapChain_Wrapper
    {
    public:
    	IDXGISwapChain1_Wrapper(REFIID riid, IUnknown* pObject): IDXGISwapChain_Wrapper(riid, pObject)
        {}

        ~IDXGISwapChain1_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE GetDesc1(DXGI_SWAP_CHAIN_DESC1* pDesc);
        virtual HRESULT STDMETHODCALLTYPE GetFullscreenDesc(DXGI_SWAP_CHAIN_FULLSCREEN_DESC* pDesc);
        virtual HRESULT STDMETHODCALLTYPE GetHwnd(HWND* pHwnd);
        virtual HRESULT STDMETHODCALLTYPE GetCoreWindow(REFIID refiid, void** ppUnk);
        virtual HRESULT STDMETHODCALLTYPE Present1(UINT SyncInterval, UINT PresentFlags, const DXGI_PRESENT_PARAMETERS* pPresentParameters);
        virtual BOOL STDMETHODCALLTYPE IsTemporaryMonoSupported();
        virtual HRESULT STDMETHODCALLTYPE GetRestrictToOutput(IDXGIOutput** ppRestrictToOutput);
        virtual HRESULT STDMETHODCALLTYPE SetBackgroundColor(const DXGI_RGBA* pColor);
        virtual HRESULT STDMETHODCALLTYPE GetBackgroundColor(DXGI_RGBA* pColor);
        virtual HRESULT STDMETHODCALLTYPE SetRotation(DXGI_MODE_ROTATION Rotation);
        virtual HRESULT STDMETHODCALLTYPE GetRotation(DXGI_MODE_ROTATION* pRotation);
    };

    class IDXGIFactory2_Wrapper: public IDXGIFactory1_Wrapper
    {
    public:
    	IDXGIFactory2_Wrapper(REFIID riid, IUnknown* pObject): IDXGIFactory1_Wrapper(riid, pObject)
        {}

        ~IDXGIFactory2_Wrapper()
        {}

        virtual BOOL STDMETHODCALLTYPE IsWindowedStereoEnabled();
        virtual HRESULT STDMETHODCALLTYPE CreateSwapChainForHwnd(IUnknown* pDevice, HWND hWnd, const DXGI_SWAP_CHAIN_DESC1* pDesc, const DXGI_SWAP_CHAIN_FULLSCREEN_DESC* pFullscreenDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain);
        virtual HRESULT STDMETHODCALLTYPE CreateSwapChainForCoreWindow(IUnknown* pDevice, IUnknown* pWindow, const DXGI_SWAP_CHAIN_DESC1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain);
        virtual HRESULT STDMETHODCALLTYPE GetSharedResourceAdapterLuid(HANDLE hResource, LUID* pLuid);
        virtual HRESULT STDMETHODCALLTYPE RegisterStereoStatusWindow(HWND WindowHandle, UINT wMsg, DWORD* pdwCookie);
        virtual HRESULT STDMETHODCALLTYPE RegisterStereoStatusEvent(HANDLE hEvent, DWORD* pdwCookie);
        virtual void STDMETHODCALLTYPE UnregisterStereoStatus(DWORD dwCookie);
        virtual HRESULT STDMETHODCALLTYPE RegisterOcclusionStatusWindow(HWND WindowHandle, UINT wMsg, DWORD* pdwCookie);
        virtual HRESULT STDMETHODCALLTYPE RegisterOcclusionStatusEvent(HANDLE hEvent, DWORD* pdwCookie);
        virtual void STDMETHODCALLTYPE UnregisterOcclusionStatus(DWORD dwCookie);
        virtual HRESULT STDMETHODCALLTYPE CreateSwapChainForComposition(IUnknown* pDevice, const DXGI_SWAP_CHAIN_DESC1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain);
    };

    class IDXGIAdapter2_Wrapper: public IDXGIAdapter1_Wrapper
    {
    public:
    	IDXGIAdapter2_Wrapper(REFIID riid, IUnknown* pObject): IDXGIAdapter1_Wrapper(riid, pObject)
        {}

        ~IDXGIAdapter2_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE GetDesc2(DXGI_ADAPTER_DESC2* pDesc);
    };

    class IDXGIOutput1_Wrapper: public IDXGIOutput_Wrapper
    {
    public:
    	IDXGIOutput1_Wrapper(REFIID riid, IUnknown* pObject): IDXGIOutput_Wrapper(riid, pObject)
        {}

        ~IDXGIOutput1_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE GetDisplayModeList1(DXGI_FORMAT EnumFormat, UINT Flags, UINT* pNumModes, DXGI_MODE_DESC1* pDesc);
        virtual HRESULT STDMETHODCALLTYPE FindClosestMatchingMode1(const DXGI_MODE_DESC1* pModeToMatch, DXGI_MODE_DESC1* pClosestMatch, IUnknown* pConcernedDevice);
        virtual HRESULT STDMETHODCALLTYPE GetDisplaySurfaceData1(IDXGIResource* pDestination);
        virtual HRESULT STDMETHODCALLTYPE DuplicateOutput(IUnknown* pDevice, IDXGIOutputDuplication** ppOutputDuplication);
    };

    class IDXGIDevice3_Wrapper: public IDXGIDevice2_Wrapper
    {
    public:
    	IDXGIDevice3_Wrapper(REFIID riid, IUnknown* pObject): IDXGIDevice2_Wrapper(riid, pObject)
        {}

        ~IDXGIDevice3_Wrapper()
        {}

        virtual void STDMETHODCALLTYPE Trim();
    };

    class IDXGISwapChain2_Wrapper: public IDXGISwapChain1_Wrapper
    {
    public:
    	IDXGISwapChain2_Wrapper(REFIID riid, IUnknown* pObject): IDXGISwapChain1_Wrapper(riid, pObject)
        {}

        ~IDXGISwapChain2_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE SetSourceSize(UINT Width, UINT Height);
        virtual HRESULT STDMETHODCALLTYPE GetSourceSize(UINT* pWidth, UINT* pHeight);
        virtual HRESULT STDMETHODCALLTYPE SetMaximumFrameLatency(UINT MaxLatency);
        virtual HRESULT STDMETHODCALLTYPE GetMaximumFrameLatency(UINT* pMaxLatency);
        virtual HANDLE STDMETHODCALLTYPE GetFrameLatencyWaitableObject();
        virtual HRESULT STDMETHODCALLTYPE SetMatrixTransform(const DXGI_MATRIX_3X2_F* pMatrix);
        virtual HRESULT STDMETHODCALLTYPE GetMatrixTransform(DXGI_MATRIX_3X2_F* pMatrix);
    };

    class IDXGIOutput2_Wrapper: public IDXGIOutput1_Wrapper
    {
    public:
    	IDXGIOutput2_Wrapper(REFIID riid, IUnknown* pObject): IDXGIOutput1_Wrapper(riid, pObject)
        {}

        ~IDXGIOutput2_Wrapper()
        {}

        virtual BOOL STDMETHODCALLTYPE SupportsOverlays();
    };

    class IDXGIFactory3_Wrapper: public IDXGIFactory2_Wrapper
    {
    public:
    	IDXGIFactory3_Wrapper(REFIID riid, IUnknown* pObject): IDXGIFactory2_Wrapper(riid, pObject)
        {}

        ~IDXGIFactory3_Wrapper()
        {}

        virtual UINT STDMETHODCALLTYPE GetCreationFlags();
    };

    class IDXGIDecodeSwapChain_Wrapper: public IUnknown_Wrapper
    {
    public:
    	IDXGIDecodeSwapChain_Wrapper(REFIID riid, IUnknown* pObject): IUnknown_Wrapper(riid, pObject)
        {}

        ~IDXGIDecodeSwapChain_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE PresentBuffer(UINT BufferToPresent, UINT SyncInterval, UINT Flags);
        virtual HRESULT STDMETHODCALLTYPE SetSourceRect(const RECT* pRect);
        virtual HRESULT STDMETHODCALLTYPE SetTargetRect(const RECT* pRect);
        virtual HRESULT STDMETHODCALLTYPE SetDestSize(UINT Width, UINT Height);
        virtual HRESULT STDMETHODCALLTYPE GetSourceRect(RECT* pRect);
        virtual HRESULT STDMETHODCALLTYPE GetTargetRect(RECT* pRect);
        virtual HRESULT STDMETHODCALLTYPE GetDestSize(UINT* pWidth, UINT* pHeight);
        virtual HRESULT STDMETHODCALLTYPE SetColorSpace(DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAGS ColorSpace);
        virtual DXGI_MULTIPLANE_OVERLAY_YCbCr_FLAGS STDMETHODCALLTYPE GetColorSpace();
    };

    class IDXGIFactoryMedia_Wrapper: public IUnknown_Wrapper
    {
    public:
    	IDXGIFactoryMedia_Wrapper(REFIID riid, IUnknown* pObject): IUnknown_Wrapper(riid, pObject)
        {}

        ~IDXGIFactoryMedia_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE CreateSwapChainForCompositionSurfaceHandle(IUnknown* pDevice, HANDLE hSurface, const DXGI_SWAP_CHAIN_DESC1* pDesc, IDXGIOutput* pRestrictToOutput, IDXGISwapChain1** ppSwapChain);
        virtual HRESULT STDMETHODCALLTYPE CreateDecodeSwapChainForCompositionSurfaceHandle(IUnknown* pDevice, HANDLE hSurface, DXGI_DECODE_SWAP_CHAIN_DESC* pDesc, IDXGIResource* pYuvDecodeBuffers, IDXGIOutput* pRestrictToOutput, IDXGIDecodeSwapChain** ppSwapChain);
    };

    class IDXGISwapChainMedia_Wrapper: public IUnknown_Wrapper
    {
    public:
    	IDXGISwapChainMedia_Wrapper(REFIID riid, IUnknown* pObject): IUnknown_Wrapper(riid, pObject)
        {}

        ~IDXGISwapChainMedia_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE GetFrameStatisticsMedia(DXGI_FRAME_STATISTICS_MEDIA* pStats);
        virtual HRESULT STDMETHODCALLTYPE SetPresentDuration(UINT Duration);
        virtual HRESULT STDMETHODCALLTYPE CheckPresentDurationSupport(UINT DesiredPresentDuration, UINT* pClosestSmallerPresentDuration, UINT* pClosestLargerPresentDuration);
    };

    class IDXGIOutput3_Wrapper: public IDXGIOutput2_Wrapper
    {
    public:
    	IDXGIOutput3_Wrapper(REFIID riid, IUnknown* pObject): IDXGIOutput2_Wrapper(riid, pObject)
        {}

        ~IDXGIOutput3_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE CheckOverlaySupport(DXGI_FORMAT EnumFormat, IUnknown* pConcernedDevice, UINT* pFlags);
    };

    class IDXGISwapChain3_Wrapper: public IDXGISwapChain2_Wrapper
    {
    public:
    	IDXGISwapChain3_Wrapper(REFIID riid, IUnknown* pObject): IDXGISwapChain2_Wrapper(riid, pObject)
        {}

        ~IDXGISwapChain3_Wrapper()
        {}

        virtual UINT STDMETHODCALLTYPE GetCurrentBackBufferIndex();
        virtual HRESULT STDMETHODCALLTYPE CheckColorSpaceSupport(DXGI_COLOR_SPACE_TYPE ColorSpace, UINT* pColorSpaceSupport);
        virtual HRESULT STDMETHODCALLTYPE SetColorSpace1(DXGI_COLOR_SPACE_TYPE ColorSpace);
        virtual HRESULT STDMETHODCALLTYPE ResizeBuffers1(UINT BufferCount, UINT Width, UINT Height, DXGI_FORMAT Format, UINT SwapChainFlags, const UINT* pCreationNodeMask, IUnknown* const* ppPresentQueue);
    };

    class IDXGIOutput4_Wrapper: public IDXGIOutput3_Wrapper
    {
    public:
    	IDXGIOutput4_Wrapper(REFIID riid, IUnknown* pObject): IDXGIOutput3_Wrapper(riid, pObject)
        {}

        ~IDXGIOutput4_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE CheckOverlayColorSpaceSupport(DXGI_FORMAT Format, DXGI_COLOR_SPACE_TYPE ColorSpace, IUnknown* pConcernedDevice, UINT* pFlags);
    };

    class IDXGIFactory4_Wrapper: public IDXGIFactory3_Wrapper
    {
    public:
    	IDXGIFactory4_Wrapper(REFIID riid, IUnknown* pObject): IDXGIFactory3_Wrapper(riid, pObject)
        {}

        ~IDXGIFactory4_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE EnumAdapterByLuid(LUID AdapterLuid, REFIID riid, void** ppvAdapter);
        virtual HRESULT STDMETHODCALLTYPE EnumWarpAdapter(REFIID riid, void** ppvAdapter);
    };

    class IDXGIAdapter3_Wrapper: public IDXGIAdapter2_Wrapper
    {
    public:
    	IDXGIAdapter3_Wrapper(REFIID riid, IUnknown* pObject): IDXGIAdapter2_Wrapper(riid, pObject)
        {}

        ~IDXGIAdapter3_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE RegisterHardwareContentProtectionTeardownStatusEvent(HANDLE hEvent, DWORD* pdwCookie);
        virtual void STDMETHODCALLTYPE UnregisterHardwareContentProtectionTeardownStatus(DWORD dwCookie);
        virtual HRESULT STDMETHODCALLTYPE QueryVideoMemoryInfo(UINT NodeIndex, DXGI_MEMORY_SEGMENT_GROUP MemorySegmentGroup, DXGI_QUERY_VIDEO_MEMORY_INFO* pVideoMemoryInfo);
        virtual HRESULT STDMETHODCALLTYPE SetVideoMemoryReservation(UINT NodeIndex, DXGI_MEMORY_SEGMENT_GROUP MemorySegmentGroup, UINT64 Reservation);
        virtual HRESULT STDMETHODCALLTYPE RegisterVideoMemoryBudgetChangeNotificationEvent(HANDLE hEvent, DWORD* pdwCookie);
        virtual void STDMETHODCALLTYPE UnregisterVideoMemoryBudgetChangeNotification(DWORD dwCookie);
    };

    class IDXGIOutput5_Wrapper: public IDXGIOutput4_Wrapper
    {
    public:
    	IDXGIOutput5_Wrapper(REFIID riid, IUnknown* pObject): IDXGIOutput4_Wrapper(riid, pObject)
        {}

        ~IDXGIOutput5_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE DuplicateOutput1(IUnknown* pDevice, UINT Flags, UINT SupportedFormatsCount, const DXGI_FORMAT* pSupportedFormats, IDXGIOutputDuplication** ppOutputDuplication);
    };

    class IDXGISwapChain4_Wrapper: public IDXGISwapChain3_Wrapper
    {
    public:
    	IDXGISwapChain4_Wrapper(REFIID riid, IUnknown* pObject): IDXGISwapChain3_Wrapper(riid, pObject)
        {}

        ~IDXGISwapChain4_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE SetHDRMetaData(DXGI_HDR_METADATA_TYPE Type, UINT Size, void* pMetaData);
    };

    class IDXGIDevice4_Wrapper: public IDXGIDevice3_Wrapper
    {
    public:
    	IDXGIDevice4_Wrapper(REFIID riid, IUnknown* pObject): IDXGIDevice3_Wrapper(riid, pObject)
        {}

        ~IDXGIDevice4_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE OfferResources1(UINT NumResources, IDXGIResource* const* ppResources, DXGI_OFFER_RESOURCE_PRIORITY Priority, UINT Flags);
        virtual HRESULT STDMETHODCALLTYPE ReclaimResources1(UINT NumResources, IDXGIResource* const* ppResources, DXGI_RECLAIM_RESOURCE_RESULTS* pResults);
    };

    class IDXGIFactory5_Wrapper: public IDXGIFactory4_Wrapper
    {
    public:
    	IDXGIFactory5_Wrapper(REFIID riid, IUnknown* pObject): IDXGIFactory4_Wrapper(riid, pObject)
        {}

        ~IDXGIFactory5_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE CheckFeatureSupport(DXGI_FEATURE Feature, void* pFeatureSupportData, UINT FeatureSupportDataSize);
    };

    class IDXGIAdapter4_Wrapper: public IDXGIAdapter3_Wrapper
    {
    public:
    	IDXGIAdapter4_Wrapper(REFIID riid, IUnknown* pObject): IDXGIAdapter3_Wrapper(riid, pObject)
        {}

        ~IDXGIAdapter4_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE GetDesc3(DXGI_ADAPTER_DESC3* pDesc);
    };

    class IDXGIOutput6_Wrapper: public IDXGIOutput5_Wrapper
    {
    public:
    	IDXGIOutput6_Wrapper(REFIID riid, IUnknown* pObject): IDXGIOutput5_Wrapper(riid, pObject)
        {}

        ~IDXGIOutput6_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE GetDesc1(DXGI_OUTPUT_DESC1* pDesc);
        virtual HRESULT STDMETHODCALLTYPE CheckHardwareCompositionSupport(UINT* pFlags);
    };

    class IDXGIFactory6_Wrapper: public IDXGIFactory5_Wrapper
    {
    public:
    	IDXGIFactory6_Wrapper(REFIID riid, IUnknown* pObject): IDXGIFactory5_Wrapper(riid, pObject)
        {}

        ~IDXGIFactory6_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE EnumAdapterByGpuPreference(UINT Adapter, DXGI_GPU_PREFERENCE GpuPreference, REFIID riid, void** ppvAdapter);
    };

    class IDXGIFactory7_Wrapper: public IDXGIFactory6_Wrapper
    {
    public:
    	IDXGIFactory7_Wrapper(REFIID riid, IUnknown* pObject): IDXGIFactory6_Wrapper(riid, pObject)
        {}

        ~IDXGIFactory7_Wrapper()
        {}

        virtual HRESULT STDMETHODCALLTYPE RegisterAdaptersChangedEvent(HANDLE hEvent, DWORD* pdwCookie);
        virtual HRESULT STDMETHODCALLTYPE UnregisterAdaptersChangedEvent(DWORD dwCookie);
    };

    #define DXGI_API_IDS \
        API_IDXGIOBJECT_SETPRIVATEDATA,                                                            \
        API_IDXGIOBJECT_SETPRIVATEDATAINTERFACE,                                                   \
        API_IDXGIOBJECT_GETPRIVATEDATA,                                                            \
        API_IDXGIOBJECT_GETPARENT,                                                                 \
        API_IDXGIDEVICESUBOBJECT_GETDEVICE,                                                        \
        API_IDXGIRESOURCE_GETSHAREDHANDLE,                                                         \
        API_IDXGIRESOURCE_GETUSAGE,                                                                \
        API_IDXGIRESOURCE_SETEVICTIONPRIORITY,                                                     \
        API_IDXGIRESOURCE_GETEVICTIONPRIORITY,                                                     \
        API_IDXGIKEYEDMUTEX_ACQUIRESYNC,                                                           \
        API_IDXGIKEYEDMUTEX_RELEASESYNC,                                                           \
        API_IDXGISURFACE_GETDESC,                                                                  \
        API_IDXGISURFACE_MAP,                                                                      \
        API_IDXGISURFACE_UNMAP,                                                                    \
        API_IDXGISURFACE1_GETDC,                                                                   \
        API_IDXGISURFACE1_RELEASEDC,                                                               \
        API_IDXGIADAPTER_ENUMOUTPUTS,                                                              \
        API_IDXGIADAPTER_GETDESC,                                                                  \
        API_IDXGIADAPTER_CHECKINTERFACESUPPORT,                                                    \
        API_IDXGIOUTPUT_GETDESC,                                                                   \
        API_IDXGIOUTPUT_GETDISPLAYMODELIST,                                                        \
        API_IDXGIOUTPUT_FINDCLOSESTMATCHINGMODE,                                                   \
        API_IDXGIOUTPUT_WAITFORVBLANK,                                                             \
        API_IDXGIOUTPUT_TAKEOWNERSHIP,                                                             \
        API_IDXGIOUTPUT_RELEASEOWNERSHIP,                                                          \
        API_IDXGIOUTPUT_GETGAMMACONTROLCAPABILITIES,                                               \
        API_IDXGIOUTPUT_SETGAMMACONTROL,                                                           \
        API_IDXGIOUTPUT_GETGAMMACONTROL,                                                           \
        API_IDXGIOUTPUT_SETDISPLAYSURFACE,                                                         \
        API_IDXGIOUTPUT_GETDISPLAYSURFACEDATA,                                                     \
        API_IDXGIOUTPUT_GETFRAMESTATISTICS,                                                        \
        API_IDXGISWAPCHAIN_PRESENT,                                                                \
        API_IDXGISWAPCHAIN_GETBUFFER,                                                              \
        API_IDXGISWAPCHAIN_SETFULLSCREENSTATE,                                                     \
        API_IDXGISWAPCHAIN_GETFULLSCREENSTATE,                                                     \
        API_IDXGISWAPCHAIN_GETDESC,                                                                \
        API_IDXGISWAPCHAIN_RESIZEBUFFERS,                                                          \
        API_IDXGISWAPCHAIN_RESIZETARGET,                                                           \
        API_IDXGISWAPCHAIN_GETCONTAININGOUTPUT,                                                    \
        API_IDXGISWAPCHAIN_GETFRAMESTATISTICS,                                                     \
        API_IDXGISWAPCHAIN_GETLASTPRESENTCOUNT,                                                    \
        API_IDXGIFACTORY_ENUMADAPTERS,                                                             \
        API_IDXGIFACTORY_MAKEWINDOWASSOCIATION,                                                    \
        API_IDXGIFACTORY_GETWINDOWASSOCIATION,                                                     \
        API_IDXGIFACTORY_CREATESWAPCHAIN,                                                          \
        API_IDXGIFACTORY_CREATESOFTWAREADAPTER,                                                    \
        API_IDXGIDEVICE_GETADAPTER,                                                                \
        API_IDXGIDEVICE_CREATESURFACE,                                                             \
        API_IDXGIDEVICE_QUERYRESOURCERESIDENCY,                                                    \
        API_IDXGIDEVICE_SETGPUTHREADPRIORITY,                                                      \
        API_IDXGIDEVICE_GETGPUTHREADPRIORITY,                                                      \
        API_IDXGIFACTORY1_ENUMADAPTERS1,                                                           \
        API_IDXGIFACTORY1_ISCURRENT,                                                               \
        API_IDXGIADAPTER1_GETDESC1,                                                                \
        API_IDXGIDEVICE1_SETMAXIMUMFRAMELATENCY,                                                   \
        API_IDXGIDEVICE1_GETMAXIMUMFRAMELATENCY,                                                   \
        API_IDXGIDISPLAYCONTROL_ISSTEREOENABLED,                                                   \
        API_IDXGIDISPLAYCONTROL_SETSTEREOENABLED,                                                  \
        API_IDXGIOUTPUTDUPLICATION_GETDESC,                                                        \
        API_IDXGIOUTPUTDUPLICATION_ACQUIRENEXTFRAME,                                               \
        API_IDXGIOUTPUTDUPLICATION_GETFRAMEDIRTYRECTS,                                             \
        API_IDXGIOUTPUTDUPLICATION_GETFRAMEMOVERECTS,                                              \
        API_IDXGIOUTPUTDUPLICATION_GETFRAMEPOINTERSHAPE,                                           \
        API_IDXGIOUTPUTDUPLICATION_MAPDESKTOPSURFACE,                                              \
        API_IDXGIOUTPUTDUPLICATION_UNMAPDESKTOPSURFACE,                                            \
        API_IDXGIOUTPUTDUPLICATION_RELEASEFRAME,                                                   \
        API_IDXGISURFACE2_GETRESOURCE,                                                             \
        API_IDXGIRESOURCE1_CREATESUBRESOURCESURFACE,                                               \
        API_IDXGIRESOURCE1_CREATESHAREDHANDLE,                                                     \
        API_IDXGIDEVICE2_OFFERRESOURCES,                                                           \
        API_IDXGIDEVICE2_RECLAIMRESOURCES,                                                         \
        API_IDXGIDEVICE2_ENQUEUESETEVENT,                                                          \
        API_IDXGISWAPCHAIN1_GETDESC1,                                                              \
        API_IDXGISWAPCHAIN1_GETFULLSCREENDESC,                                                     \
        API_IDXGISWAPCHAIN1_GETHWND,                                                               \
        API_IDXGISWAPCHAIN1_GETCOREWINDOW,                                                         \
        API_IDXGISWAPCHAIN1_PRESENT1,                                                              \
        API_IDXGISWAPCHAIN1_ISTEMPORARYMONOSUPPORTED,                                              \
        API_IDXGISWAPCHAIN1_GETRESTRICTTOOUTPUT,                                                   \
        API_IDXGISWAPCHAIN1_SETBACKGROUNDCOLOR,                                                    \
        API_IDXGISWAPCHAIN1_GETBACKGROUNDCOLOR,                                                    \
        API_IDXGISWAPCHAIN1_SETROTATION,                                                           \
        API_IDXGISWAPCHAIN1_GETROTATION,                                                           \
        API_IDXGIFACTORY2_ISWINDOWEDSTEREOENABLED,                                                 \
        API_IDXGIFACTORY2_CREATESWAPCHAINFORHWND,                                                  \
        API_IDXGIFACTORY2_CREATESWAPCHAINFORCOREWINDOW,                                            \
        API_IDXGIFACTORY2_GETSHAREDRESOURCEADAPTERLUID,                                            \
        API_IDXGIFACTORY2_REGISTERSTEREOSTATUSWINDOW,                                              \
        API_IDXGIFACTORY2_REGISTERSTEREOSTATUSEVENT,                                               \
        API_IDXGIFACTORY2_UNREGISTERSTEREOSTATUS,                                                  \
        API_IDXGIFACTORY2_REGISTEROCCLUSIONSTATUSWINDOW,                                           \
        API_IDXGIFACTORY2_REGISTEROCCLUSIONSTATUSEVENT,                                            \
        API_IDXGIFACTORY2_UNREGISTEROCCLUSIONSTATUS,                                               \
        API_IDXGIFACTORY2_CREATESWAPCHAINFORCOMPOSITION,                                           \
        API_IDXGIADAPTER2_GETDESC2,                                                                \
        API_IDXGIOUTPUT1_GETDISPLAYMODELIST1,                                                      \
        API_IDXGIOUTPUT1_FINDCLOSESTMATCHINGMODE1,                                                 \
        API_IDXGIOUTPUT1_GETDISPLAYSURFACEDATA1,                                                   \
        API_IDXGIOUTPUT1_DUPLICATEOUTPUT,                                                          \
        API_IDXGIDEVICE3_TRIM,                                                                     \
        API_IDXGISWAPCHAIN2_SETSOURCESIZE,                                                         \
        API_IDXGISWAPCHAIN2_GETSOURCESIZE,                                                         \
        API_IDXGISWAPCHAIN2_SETMAXIMUMFRAMELATENCY,                                                \
        API_IDXGISWAPCHAIN2_GETMAXIMUMFRAMELATENCY,                                                \
        API_IDXGISWAPCHAIN2_GETFRAMELATENCYWAITABLEOBJECT,                                         \
        API_IDXGISWAPCHAIN2_SETMATRIXTRANSFORM,                                                    \
        API_IDXGISWAPCHAIN2_GETMATRIXTRANSFORM,                                                    \
        API_IDXGIOUTPUT2_SUPPORTSOVERLAYS,                                                         \
        API_IDXGIFACTORY3_GETCREATIONFLAGS,                                                        \
        API_IDXGIDECODESWAPCHAIN_PRESENTBUFFER,                                                    \
        API_IDXGIDECODESWAPCHAIN_SETSOURCERECT,                                                    \
        API_IDXGIDECODESWAPCHAIN_SETTARGETRECT,                                                    \
        API_IDXGIDECODESWAPCHAIN_SETDESTSIZE,                                                      \
        API_IDXGIDECODESWAPCHAIN_GETSOURCERECT,                                                    \
        API_IDXGIDECODESWAPCHAIN_GETTARGETRECT,                                                    \
        API_IDXGIDECODESWAPCHAIN_GETDESTSIZE,                                                      \
        API_IDXGIDECODESWAPCHAIN_SETCOLORSPACE,                                                    \
        API_IDXGIDECODESWAPCHAIN_GETCOLORSPACE,                                                    \
        API_IDXGIFACTORYMEDIA_CREATESWAPCHAINFORCOMPOSITIONSURFACEHANDLE,                          \
        API_IDXGIFACTORYMEDIA_CREATEDECODESWAPCHAINFORCOMPOSITIONSURFACEHANDLE,                    \
        API_IDXGISWAPCHAINMEDIA_GETFRAMESTATISTICSMEDIA,                                           \
        API_IDXGISWAPCHAINMEDIA_SETPRESENTDURATION,                                                \
        API_IDXGISWAPCHAINMEDIA_CHECKPRESENTDURATIONSUPPORT,                                       \
        API_IDXGIOUTPUT3_CHECKOVERLAYSUPPORT,                                                      \
        API_IDXGISWAPCHAIN3_GETCURRENTBACKBUFFERINDEX,                                             \
        API_IDXGISWAPCHAIN3_CHECKCOLORSPACESUPPORT,                                                \
        API_IDXGISWAPCHAIN3_SETCOLORSPACE1,                                                        \
        API_IDXGISWAPCHAIN3_RESIZEBUFFERS1,                                                        \
        API_IDXGIOUTPUT4_CHECKOVERLAYCOLORSPACESUPPORT,                                            \
        API_IDXGIFACTORY4_ENUMADAPTERBYLUID,                                                       \
        API_IDXGIFACTORY4_ENUMWARPADAPTER,                                                         \
        API_IDXGIADAPTER3_REGISTERHARDWARECONTENTPROTECTIONTEARDOWNSTATUSEVENT,                    \
        API_IDXGIADAPTER3_UNREGISTERHARDWARECONTENTPROTECTIONTEARDOWNSTATUS,                       \
        API_IDXGIADAPTER3_QUERYVIDEOMEMORYINFO,                                                    \
        API_IDXGIADAPTER3_SETVIDEOMEMORYRESERVATION,                                               \
        API_IDXGIADAPTER3_REGISTERVIDEOMEMORYBUDGETCHANGENOTIFICATIONEVENT,                        \
        API_IDXGIADAPTER3_UNREGISTERVIDEOMEMORYBUDGETCHANGENOTIFICATION,                           \
        API_IDXGIOUTPUT5_DUPLICATEOUTPUT1,                                                         \
        API_IDXGISWAPCHAIN4_SETHDRMETADATA,                                                        \
        API_IDXGIDEVICE4_OFFERRESOURCES1,                                                          \
        API_IDXGIDEVICE4_RECLAIMRESOURCES1,                                                        \
        API_IDXGIFACTORY5_CHECKFEATURESUPPORT,                                                     \
        API_IDXGIADAPTER4_GETDESC3,                                                                \
        API_IDXGIOUTPUT6_GETDESC1,                                                                 \
        API_IDXGIOUTPUT6_CHECKHARDWARECOMPOSITIONSUPPORT,                                          \
        API_IDXGIFACTORY6_ENUMADAPTERBYGPUPREFERENCE,                                              \
        API_IDXGIFACTORY7_REGISTERADAPTERSCHANGEDEVENT,                                            \
        API_IDXGIFACTORY7_UNREGISTERADAPTERSCHANGEDEVENT,                                          


} // GfxLayer
